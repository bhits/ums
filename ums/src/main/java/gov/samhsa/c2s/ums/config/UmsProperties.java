package gov.samhsa.c2s.ums.config;

import lombok.Data;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;

import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Configuration
@ConfigurationProperties(prefix = "c2s.ums")
@Data
public class UmsProperties {

    @Valid
    private Ssn ssn;

    @Valid
    private Gender gender;

    @Valid
    private Mrn mrn;

    @NotNull
    @Valid
    private Avatars avatars;

    @Valid
    private Pagination pagination;

    @NotNull
    @Valid
    private Fhir fhir;

    @Valid
    private Map<String, List<RequiredIdentifierSystem>> requiredIdentifierSystemsByRole = new HashMap<>();

    public enum Algorithm {
        NONE,
        UUID,
        MRN
    }

    @Data
    public static class Identifier {
        @NotBlank
        private String codeSystem;

        @NotBlank
        private String codeSystemOID;

        @NotBlank
        private String displayName;
    }

    @Data
    public static class Mrn extends Identifier {
        @NotBlank
        private String prefix;

        @Min(6)
        private int length;

        private boolean updateInDatabaseOnStartup = true;

        private boolean reassignable = false;
    }

    @Data
    public static class Ssn extends Identifier {
        private boolean updateInDatabaseOnStartup = true;
        private boolean reassignable = false;
    }

    @Data
    public static class Gender extends Identifier {
    }

    @Data
    public static class Pagination {
        @Min(1)
        @NotNull
        private int defaultSize;

        @NotNull
        private int maxSize;
    }

    @Data
    public static class Fhir {

        private Publish publish;

        @Data
        public static class Publish {
            @NotBlank
            private boolean enabled;
        }
    }

    @Data
    public static class RequiredIdentifierSystem {
        @NotBlank
        private String system;
        /**
         * If the {@link RequiredIdentifierSystem#algorithm} is set to something other than {@link Algorithm#NONE},
         * then this identifier is generated by the system and <b>cannot</b> be set manually.
         */
        @NotNull
        private Algorithm algorithm = Algorithm.NONE;
    }

    @Data
    public static class Avatars {
        @NotNull
        @Min(1)
        private Long maxFileSize;   // Max allowed avatar image file size in bytes

        @NotEmpty
        private List<String> allowedFileTypesList;

        @NotNull
        @Min(1)
        private Long requiredImageWidth;   // Required avatar image width in pixels

        @NotNull
        @Min(1)
        private Long requiredImageHeight;   // Required avatar image height in pixels
    }
}
